<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300" creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			private var timer:Timer;
			private var GREEN:uint = 0x137a05;
			private var RED:uint = 0xb00909;
			private var YELLOW:uint = 0xfff001;
			
			public var timeLimit:int;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				drawCircle(GREEN);
			}
				
			public function setTimer(value:String):void
			{
				timerDisplay.text = value;
			}
			public function setTime(value:int):void
			{
				timeDisplay.text = getTimeString(value);
				
				if(value == 0)
				{
					drawCircle(RED);
					timeDisplay.setStyle("color",0xFFFFFF);					
					timerDisplay.setStyle("color",0xFFFFFF);					
				}
				else if(value <= 5 )
				{
					drawCircle(YELLOW);
					timeDisplay.setStyle("color",0x000000);					
					timerDisplay.setStyle("color",0x000000);					
				}
				else
				{
					drawCircle(GREEN);
					timeDisplay.setStyle("color",0xFFFFFF);					
					timerDisplay.setStyle("color",0xFFFFFF);					
				}
					
			}
			private function getTimeString(sec:int):String
			{
				var s:Number = sec % 60;
				var m:Number = Math.floor((sec % 3600 ) / 60);
				var h:Number = Math.floor(sec / (60 * 60));
				
				var hourStr:String = (h == 0) ? "" : doubleDigitFormat(h) + ":";
				var minuteStr:String = (h == 0 && m == 0) ? "" :  doubleDigitFormat(m) + ":";
				var secondsStr:String = doubleDigitFormat(s);
				
				return hourStr + minuteStr + secondsStr;
			}
			private function doubleDigitFormat($num:uint):String
			{
				if ($num < 10) 
					return ("0" + $num);
				
				return String($num);
			}
			
			private function drawCircle(color:uint):void 
			{
				graphics.beginFill(color);
				var xx:Number = width/2;
				var yy:int = 0;
				var r:Number = height/2;
			    var c1:Number=r * (Math.SQRT2 - 1);
			    var c2:Number=r * Math.SQRT2 / 2;
			    graphics.moveTo(xx+r,yy);
			    graphics.curveTo(xx+r,yy+c1,xx+c2,yy+c2);
			    graphics.curveTo(xx+c1,yy+r,xx,y+r);
			    graphics.curveTo(xx-c1,yy+r,xx-c2,yy+c2);
			    graphics.curveTo(xx-r,yy+c1,xx-r,yy);
			}
			
			public function reset():void
			{
				drawCircle(GREEN);
				timeDisplay.text = "00";
				timerDisplay.text = "00:00";
			}
			
			public function getTime():Object
			{
				return timerDisplay.text;
			}
			
		]]>
	</fx:Script>
	<s:Label id="timeDisplay" left="0" right="0" top="4" textAlign="center" maxDisplayedLines="1" styleName="bigTimerLabel"/>
	<s:Label id="timerDisplay" left="0" right="0" top="60" textAlign="center" maxDisplayedLines="1" styleName="mediumTimerLabel"/>
</s:Group>
